// 가스 센서  //

#include <SoftwareSerial.h>
#include "MQ7.h"

#define BT_RXD 2
#define BT_TXD 4
SoftwareSerial bluetooth(BT_RXD, BT_TXD);

MQ7 mq7(A0,5.0);

int CO_sensor = A0; // 일산화탄소 핀 번호

int shock_sensor = A1;  // 충격센서 핀 번호
int shock_value = 0;    // 센서에서 입력 받은 충격 

int read_Button = 0; // 버튼 누름 여부 데이터

int waiting = 40;    
float stop_time = 10000;   // 센서를 구동하지 않는 시간

int sound =13; // 부저

void setup(){
  Serial.begin(9600);   // 시리얼 모니터 시작, 속도는 9600
  bluetooth.begin(9600);
  pinMode(CO_sensor,INPUT);
  pinMode(7,INPUT_PULLUP);
  pinMode(sound,OUTPUT);
  pinMode(shock_sensor,INPUT);
}

void loop(){
  shock_value = analogRead(shock_sensor);
  
  read_Button=digitalRead(7); // 버튼 값 읽어오기
  
  delayMicroseconds(waiting);  // 너무 많은 데이터 입력을 피해주기 위해 잠시 멈춰주는 시간. 

  int CO_value = int(mq7.getPPM());  // 일산화탄소 값 받기

  
 Serial.print("Button press :"); 
  if (read_Button == LOW)
  {
    Serial.println("1");
    for(int i= 0; i<3; i++){  
    digitalWrite(sound,HIGH); 
    digitalWrite(sound,LOW);
    }
  }
  else
  {
   Serial.println("0");
   digitalWrite(sound,LOW);
  }

  
// 시리얼 모니터에 값 출력
  Serial.println(shock_value);

  Serial.println(CO_value);
  
   if (read_Button == HIGH)
  {
    bluetooth.print("0");
  }
  else
  {
   bluetooth.print("1");
  }

  bluetooth.print(shock_value/1000);
  bluetooth.print((shock_value%1000)/100);
  bluetooth.print((shock_value%100)/10);
  bluetooth.print(shock_value%10);
 
  bluetooth.print(CO_value/10000);
  bluetooth.print((CO_value%10000)/1000);
  bluetooth.print((CO_value%1000)/100);
  bluetooth.print((CO_value%100)/10);
  bluetooth.print(CO_value%10);

}


// 최종 코드 // 

#include <SoftwareSerial.h>
#include "MQ7.h"

#define BT_RXD 2
#define BT_TXD 4
SoftwareSerial bluetooth(BT_RXD, BT_TXD);

MQ7 mq7(A0,5.0);

int CO_sensor = A0; // 일산화탄소 핀 번호

int shock_sensor = A1;  // 충격센서 핀 번호
int shock_value = 0;    // 센서에서 입력 받은 충격 

int read_Button = 0; // 버튼 누름 여부 데이터

int waiting = 40;    
float stop_time = 10000;   // 센서를 구동하지 않는 시간

int sound =13; // 부저

void setup(){
  Serial.begin(9600);   // 시리얼 모니터 시작, 속도는 9600
  bluetooth.begin(9600);
  pinMode(CO_sensor,INPUT);
  pinMode(7,INPUT_PULLUP);
  pinMode(sound,OUTPUT);
  pinMode(shock_sensor,INPUT);

}

void loop(){
  shock_value = analogRead(shock_sensor);
  
  read_Button=digitalRead(7); // 버튼 값 읽어오기
  
  delayMicroseconds(waiting);  // 너무 많은 데이터 입력을 피해주기 위해 잠시 멈춰주는 시간. 

  int CO_value = int(mq7.getPPM());  // 일산화탄소 값 받기

  
 Serial.print("Button press :"); 
  if (read_Button == LOW)
  {
    Serial.println("1");
    for(int i= 0; i<3; i++){  
    digitalWrite(sound,HIGH); 
    digitalWrite(sound,LOW);

    }
  }
  else
  {
   Serial.println("0");
   digitalWrite(sound,LOW);
  }

  
// 시리얼 모니터에 값 출력
  Serial.println(shock_value);

  Serial.println(CO_value);
  
   if (read_Button == HIGH)
  {
    bluetooth.print("0");
  }
  else
  {
   bluetooth.print("1");
  }

  bluetooth.print(shock_value/1000);
  bluetooth.print((shock_value%1000)/100);
  bluetooth.print((shock_value%100)/10);
  bluetooth.print(shock_value%10);
 
  bluetooth.print(CO_value/10000);
  bluetooth.print((CO_value%10000)/1000);
  bluetooth.print((CO_value%1000)/100);
  bluetooth.print((CO_value%100)/10);
  bluetooth.print(CO_value%10);



}
